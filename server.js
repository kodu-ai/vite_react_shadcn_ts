import { serve } from '@hono/node-server';
import { serveStatic } from '@hono/node-server/serve-static';
import { Hono } from 'hono';
import { fileURLToPath } from 'node:url';
import { dirname, resolve } from 'node:path';

// Import the built Hono app from dist/server/index.js
// This file is generated by the 'build:api' script
import honoApp from './dist/server/index.js';

const __dirname = dirname(fileURLToPath(import.meta.url));
const distPath = resolve(__dirname, 'dist'); // Define distPath here

// --- Production Server Setup ---
const prodApp = new Hono();

// 1. Mount the Hono API routes under /api
// Requests starting with /api (e.g., /api/hello) will be handled by honoApp.
prodApp.route('/api', honoApp);

// 2. Serve static assets from dist/assets
// Requests for /assets/* will be served from ./dist/assets
prodApp.use(
  '/assets/*',
  serveStatic({ root: './dist' }) // root is relative to CWD where server.js is run
);

// 3. Serve other static files like favicon.ico, robots.txt etc. from ./dist
prodApp.get('/favicon.ico', serveStatic({ path: './dist/favicon.ico' }));
prodApp.get('/robots.txt', serveStatic({ path: './dist/robots.txt' }));
// Add other specific root files if needed

// 4. Serve the SPA fallback (index.html) for all other GET requests
prodApp.get('*', serveStatic({ path: './dist/index.html' }));

// --- Start Server ---
const port = process.env.PORT || 3000; // Use PORT env var or default to 3000

console.log(`Production server starting on port ${port}...`);
console.log(`Serving static files from: ${distPath}`);
console.log(`API routes handled by Hono.`);

serve(
  {
    fetch: prodApp.fetch,
    port: Number(port), // Ensure port is a number
  },
  (info) => {
    console.log(`Server listening on http://localhost:${info.port}`);
  }
);
